
C:\Users\patil>mysql -u root -p
Enter password: *******
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 11
Server version: 8.0.41 MySQL Community Server - GPL

Copyright (c) 2000, 2025, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> create database ass5;
Query OK, 1 row affected (0.01 sec)

mysql> use ass5;
Database changed
mysql> CREATE TABLE Customers (
    ->     customer_id INT PRIMARY KEY,
    ->     name VARCHAR(255),
    ->     dob DATE,
    ->     city VARCHAR(255),
    ->     account_type VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Accounts (
    ->     account_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     balance DECIMAL(10,2),
    ->     account_type VARCHAR(255),
    ->     branch_id INT,
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
    ->     FOREIGN KEY (branch_id) REFERENCES Branches(branch_id)
    -> );
ERROR 1824 (HY000): Failed to open the referenced table 'branches'
mysql> CREATE TABLE Branches (
    ->     branch_id INT PRIMARY KEY,
    ->     branch_name VARCHAR(255),
    ->     city VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Accounts (
    ->     account_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     balance DECIMAL(10,2),
    ->     account_type VARCHAR(255),
    ->     branch_id INT,
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
    ->     FOREIGN KEY (branch_id) REFERENCES Branches(branch_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Transactions (
    ->     transaction_id INT PRIMARY KEY,
    ->     account_id INT,
    ->     amount DECIMAL(10,2),
    ->     transaction_type VARCHAR(50), -- ('Deposit', 'Withdrawal', 'Transfer')
    ->     transaction_date DATE,
    ->     FOREIGN KEY (account_id) REFERENCES Accounts(account_id)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Loans (
    ->     loan_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     amount DECIMAL(10,2),
    ->     loan_type VARCHAR(50), -- ('Home', 'Car', 'Personal')
    ->     status VARCHAR(50), -- ('Approved', 'Pending', 'Rejected')
    ->     FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO Customers VALUES (1, 'Harshal Patil', '1990-05-21', 'Pune', 'Savings');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Customers VALUES (2, 'Piyush Patil', '1988-07-15', 'Mumbai', 'Current');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Customers VALUES (3, 'Ayush Patil', '1995-09-10', 'Pune', 'Savings');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Branches VALUES (1, 'Pune Branch', 'Pune');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Branches VALUES (2, 'Mumbai Branch', 'Mumbai');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Accounts VALUES (101, 1, 30000.00, 'Savings', 1);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Accounts VALUES (102, 2, 20000.00, 'Current', 2);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Accounts VALUES (103, 3, 40000.00, 'Savings', 1);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Transactions VALUES (1, 101, 5000, 'Deposit', '2024-01-01');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Transactions VALUES (2, 102, 10000, 'Withdrawal', '2024-02-15');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Transactions VALUES (3, 103, 8000, 'Deposit', '2024-03-10');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Loans VALUES (1, 2, 500000, 'Home', 'Approved');
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO Loans VALUES (2, 3, 200000, 'Car', 'Pending');
Query OK, 1 row affected (0.00 sec)

mysql> -- Retrieve the total balance for each account type
mysql> select *from Accounts;
+------------+-------------+----------+--------------+-----------+
| account_id | customer_id | balance  | account_type | branch_id |
+------------+-------------+----------+--------------+-----------+
|        101 |           1 | 30000.00 | Savings      |         1 |
|        102 |           2 | 20000.00 | Current      |         2 |
|        103 |           3 | 40000.00 | Savings      |         1 |
+------------+-------------+----------+--------------+-----------+
3 rows in set (0.00 sec)

mysql> select account_type, sum(balance) as total_balance from
    -> Accounts
    -> group by account_type;
+--------------+---------------+
| account_type | total_balance |
+--------------+---------------+
| Savings      |      70000.00 |
| Current      |      20000.00 |
+--------------+---------------+
2 rows in set (0.00 sec)

mysql> -- Count the number of accounts in each branch.
mysql> select account_type , count(account_id) as count
    -> from Accounts
    -> group by account_type;
+--------------+-------+
| account_type | count |
+--------------+-------+
| Savings      |     2 |
| Current      |     1 |
+--------------+-------+
2 rows in set (0.00 sec)

mysql> -- Find the number of customers in each city
mysql> select *from Customers;
+-------------+---------------+------------+--------+--------------+
| customer_id | name          | dob        | city   | account_type |
+-------------+---------------+------------+--------+--------------+
|           1 | Harshal Patil | 1990-05-21 | Pune   | Savings      |
|           2 | Piyush Patil  | 1988-07-15 | Mumbai | Current      |
|           3 | Ayush Patil   | 1995-09-10 | Pune   | Savings      |
+-------------+---------------+------------+--------+--------------+
3 rows in set (0.00 sec)

mysql> SELECT city, COUNT(*) AS customer_count
    -> FROM Customers GROUP BY city;
+--------+----------------+
| city   | customer_count |
+--------+----------------+
| Pune   |              2 |
| Mumbai |              1 |
+--------+----------------+
2 rows in set (0.00 sec)

mysql> -- Show the number of loans approved per loan type
mysql> select *from Loans;
+---------+-------------+-----------+-----------+----------+
| loan_id | customer_id | amount    | loan_type | status   |
+---------+-------------+-----------+-----------+----------+
|       1 |           2 | 500000.00 | Home      | Approved |
|       2 |           3 | 200000.00 | Car       | Pending  |
+---------+-------------+-----------+-----------+----------+
2 rows in set (0.00 sec)

mysql> SELECT loan_type, COUNT(*) AS approved_loans
    -> FROM Loans WHERE status = 'Approved' GROUP BY loan_type;
+-----------+----------------+
| loan_type | approved_loans |
+-----------+----------------+
| Home      |              1 |
+-----------+----------------+
1 row in set (0.00 sec)

mysql> -- Find the total number of transactions for each transaction type
mysql> select *from transactions;
+----------------+------------+----------+------------------+------------------+
| transaction_id | account_id | amount   | transaction_type | transaction_date |
+----------------+------------+----------+------------------+------------------+
|              1 |        101 |  5000.00 | Deposit          | 2024-01-01       |
|              2 |        102 | 10000.00 | Withdrawal       | 2024-02-15       |
|              3 |        103 |  8000.00 | Deposit          | 2024-03-10       |
+----------------+------------+----------+------------------+------------------+
3 rows in set (0.00 sec)

mysql> SELECT transaction_type, COUNT(*) AS transaction_count
    -> FROM Transactions GROUP BY transaction_type;
+------------------+-------------------+
| transaction_type | transaction_count |
+------------------+-------------------+
| Deposit          |                 2 |
| Withdrawal       |                 1 |
+------------------+-------------------+
2 rows in set (0.00 sec)

mysql> -- Show the customers who do not have a loan
mysql> -- subquery que again
mysql> select name
    -> from Customers
    -> where customer_id not in (select customer_id from Loans);
+---------------+
| name          |
+---------------+
| Harshal Patil |
+---------------+
1 row in set (0.00 sec)

mysql> -- Retrieve customers who have accounts in more than one branch.
mysql> -- having clause
mysql> select account_id
    -> from Accounts
    -> group by customer_id having count(distinct branch_id) > 1;
ERROR 1055 (42000): Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'ass5.Accounts.account_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
mysql> SELECT customer_id FROM Accounts GROUP BY customer_id HAVING COUNT(DISTINCT branch_id) > 1;
Empty set (0.00 sec)

mysql> -- Find all accounts that have not had any deposits in the last 3 months
mysql> select account_id
    -> from Accounts
    -> where account_id not in (select account_id from transactions
    -> where transaction_type = "Deposite" and transaction_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH));
+------------+
| account_id |
+------------+
|        101 |
|        102 |
|        103 |
+------------+
3 rows in set (0.00 sec)

mysql> -- Display the account types where the total balance is below ₹25,000
mysql> select account_type
    -> ^C
mysql> select account_type
    -> from Accounts
    -> group by account_type having sum(balance) < 25000;
+--------------+
| account_type |
+--------------+
| Current      |
+--------------+
1 row in set (0.00 sec)

mysql> -- Find the total balance per account type wher the balance is above ₹50,000
mysql> select account_type, sum(balance) as total_balanc
    -> from Accounts
    -> group by account_type having total_balance > 50000;
ERROR 1054 (42S22): Unknown column 'total_balance' in 'having clause'
mysql> select account_type, sum(balance) as total_balanc
    -> from Accounts
    -> group by account_type having total_balanc > 50000;
+--------------+--------------+
| account_type | total_balanc |
+--------------+--------------+
| Savings      |     70000.00 |
+--------------+--------------+
1 row in set (0.00 sec)

mysql> -- Retrieve the count of transactions made on dates where more than 5 transactions occurred
mysql> select *from Transactions;
+----------------+------------+----------+------------------+------------------+
| transaction_id | account_id | amount   | transaction_type | transaction_date |
+----------------+------------+----------+------------------+------------------+
|              1 |        101 |  5000.00 | Deposit          | 2024-01-01       |
|              2 |        102 | 10000.00 | Withdrawal       | 2024-02-15       |
|              3 |        103 |  8000.00 | Deposit          | 2024-03-10       |
+----------------+------------+----------+------------------+------------------+
3 rows in set (0.00 sec)

mysql> SELECT transaction_date, COUNT(*) AS transaction_count FROM Transactions GROUP BY transaction_date HAVING transaction_count > 5;
Empty set (0.00 sec)

mysql> -- Find the top 3 transaction days with the highest total transaction amount
mysql> SELECT transaction_date, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_date ORDER BY total_amount DESC LIMIT 3;
+------------------+--------------+
| transaction_date | total_amount |
+------------------+--------------+
| 2024-02-15       |     10000.00 |
| 2024-03-10       |      8000.00 |
| 2024-01-01       |      5000.00 |
+------------------+--------------+
3 rows in set (0.00 sec)

mysql> -- desc limit for the rank;
mysql> -- Find customers who have a loan but no account in the bank
mysql> SELECT name FROM Customers WHERE customer_id IN (SELECT customer_id FROM Loans) AND customer_id NOT IN (SELECT customer_id FROM Accounts);
Empty set (0.00 sec)

mysql>